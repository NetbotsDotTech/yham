name: Deploy YHAM

on:
  push:
    branches:
      - dashboard
      - website
      - api

jobs:
  deploy_dashboard:
    runs-on: self-hosted  # Use the self-hosted runner
    if: github.ref == 'refs/heads/dashboard'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_DASBOARD }}

      - name: Copy Dashboard Build Files to EC2
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST_DASHBOARD }}
        run: |
          # Copy dist folder to the EC2 instance for the dashboard
          scp -r dist/* $EC2_USER@$EC2_HOST:/var/www/html/
          # Restart Nginx
          ssh $EC2_USER@$EC2_HOST "sudo systemctl restart nginx"

  deploy_website:
    runs-on: self-hosted  # Use the self-hosted runner
    if: github.ref == 'refs/heads/website'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_WEBSITE }}

      - name: Copy Website Build Files to EC2
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST_WEBSITE }}
        run: |
          # Copy dist folder to the EC2 instance for the website
          scp -r dist/* $EC2_USER@$EC2_HOST:/var/www/html/
          # Restart Nginx
          ssh $EC2_USER@$EC2_HOST "sudo systemctl restart nginx"

  deploy_api:
    runs-on: self-hosted  # Use the self-hosted runner
    if: github.ref == 'refs/heads/api'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_API }}

      - name: Install and Start API
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST_API }}
        run: |
          # SSH into the EC2 instance to install dependencies and start the API
          ssh $EC2_USER@$EC2_HOST << 'EOF'
            cd /path/to/api  # Replace with the path to your API
            npm install      # Install dependencies
            pm2 restart api  # Restart the Express API (ensure your PM2 process is named 'api')
          EOF
